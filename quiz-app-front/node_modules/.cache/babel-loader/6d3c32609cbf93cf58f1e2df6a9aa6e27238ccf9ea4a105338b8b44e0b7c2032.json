{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/hamato/goal/pizza/pizza/src/components/FinishScreen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FinishScreen({\n  points,\n  maxPssiblePoint,\n  highscore\n}) {\n  const percentage = points / maxPssiblePoint * 100;\n  let emoji;\n  if (percentage === 100) emoji = \"💰\";\n  if (percentage < 100 && percentage >= 80) emoji = \"😄\";\n  if (percentage < 80 && percentage >= 50) emoji = \"🤔\";\n  if (percentage < 50) emoji = \"🤦‍♂️\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"You Scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 40\n      }, this), \" out of\", \" \", maxPssiblePoint, \"(\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore: \", highscore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["FinishScreen","points","maxPssiblePoint","highscore","percentage","emoji","_jsxDEV","_Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","_c","$RefreshReg$"],"sources":["/home/ahmed/hamato/goal/pizza/pizza/src/components/FinishScreen.js"],"sourcesContent":["export default function FinishScreen({ points, maxPssiblePoint, highscore }) {\n  const percentage = (points / maxPssiblePoint) * 100;\n  let emoji;\n\n  if (percentage === 100) emoji = \"💰\";\n  if (percentage < 100 && percentage >= 80) emoji = \"😄\";\n  if (percentage < 80 && percentage >= 50) emoji = \"🤔\";\n  if (percentage < 50) emoji = \"🤦‍♂️\";\n  return (\n    <>\n      <p className=\"result\">\n        <span>{emoji}</span>You Scored <strong>{points}</strong> out of{\" \"}\n        {maxPssiblePoint}({Math.ceil(percentage)}%)\n      </p>\n      <p className=\"highscore\">(Highscore: {highscore} points)</p>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,eAAe,SAASA,YAAYA,CAAC;EAAEC,MAAM;EAAEC,eAAe;EAAEC;AAAU,CAAC,EAAE;EAC3E,MAAMC,UAAU,GAAIH,MAAM,GAAGC,eAAe,GAAI,GAAG;EACnD,IAAIG,KAAK;EAET,IAAID,UAAU,KAAK,GAAG,EAAEC,KAAK,GAAG,IAAI;EACpC,IAAID,UAAU,GAAG,GAAG,IAAIA,UAAU,IAAI,EAAE,EAAEC,KAAK,GAAG,IAAI;EACtD,IAAID,UAAU,GAAG,EAAE,IAAIA,UAAU,IAAI,EAAE,EAAEC,KAAK,GAAG,IAAI;EACrD,IAAID,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,OAAO;EACpC,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAGG,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBF,OAAA;QAAAE,QAAA,EAAOH;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAAW,eAAAP,OAAA;QAAAE,QAAA,EAASP;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,WAAO,EAAC,GAAG,EAClEX,eAAe,EAAC,GAAC,EAACY,IAAI,CAACC,IAAI,CAACX,UAAU,CAAC,EAAC,IAC3C;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJP,OAAA;MAAGG,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,cAAY,EAACL,SAAS,EAAC,UAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC5D,CAAC;AAEP;AAACG,EAAA,GAjBuBhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}